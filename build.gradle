buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'org.javafxports:jfxmobile-plugin:1.3.10'
    }
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'org.javafxports.jfxmobile'

repositories {
    mavenCentral()
    jcenter()
    maven {
        url 'http://nexus.gluonhq.com/nexus/content/repositories/releases/'
    }
    maven {
        url 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
}

dependencies {
    compile 'org.jetbrains:annotations:15.0'
    compile 'net.sourceforge.streamsupport:streamsupport:1.6.0'
    desktopRuntime 'org.xerial:sqlite-jdbc:3.21.0.1'
    androidRuntime 'org.sqldroid:sqldroid:1.0.3'
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.google.guava:guava:23.6-jre'
    compile 'commons-io:commons-io:2.6'
    compile 'org.apache.commons:commons-lang3:3.7'
    compile 'io.netty:netty-all:4.1.21.Final-SNAPSHOT'
    compile 'com.google.protobuf:protobuf-java:3.5.1'
    compile 'com.annimon:stream:1.1.9'
    compile 'com.gluonhq:charm:4.4.1'
    compile 'com.gluonhq:glisten-afterburner:1.2.1'
    compile 'com.gluonhq:charm-down-common:3.0.0-b8'
    desktopRuntime 'com.gluonhq:charm-desktop:3.0.1-b7'
    androidRuntime 'com.gluonhq:charm-android:3.0.1-b7'
    desktopRuntime 'com.gluonhq:charm-down-desktop:3.0.0-b8'
    androidRuntime 'com.gluonhq:charm-down-android:3.0.0-b8'
    compile 'org.projectlombok:lombok:1.16.20'
    // compile 'com.airhacks:afterburner.mfx:1.6.2'
    //  runtime 'javax.annotation:javax.annotation-api:1.2'
}

mainClassName = 'fr.galaxyoyo.gatherplaying.Main'
sourceCompatibility = 1.8
archivesBaseName = "Gather Playing"

jfxmobile {
    android {
        manifest = 'src/android/AndroidManifest.xml'
        compileSdkVersion = 23
        packagingOptions {
            exclude 'CERT.RSA'
            exclude 'CERT.SF'
            exclude 'META-INF/INDEX.LIST'
            exclude 'io.netty.versions.properties'
            exclude 'META-INF/LICENSE.txt'
            exclude 'META-INF/MANIFEST.MF'
            exclude 'META-INF/NOTICE.txt'
        }
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

tasks.withType(Zip) { task ->
    task.doLast {
        ant.checksum file: it.archivePath
    }
}

run {
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
        if (System.getProperty("os.name").toLowerCase().contains("win")) {
            if (side == 'server')
                workingDir 'C:\\IDEA Workspace\\Gather Playing\\server'
            else if (side == 'client')
                workingDir 'C:\\IDEA Workspace\\Gather Playing\\client'
            else
                workingDir 'C:\\IDEA Workspace\\Gather Playing\\client 2'
        }
        else {
            if (side == 'server')
                workingDir '/home/galaxyoyo/IDEA Workspace/Gather Playing/server'
            else if (side == 'client')
                workingDir '/home/galaxyoyo/IDEA Workspace/Gather Playing/client'
            else
                workingDir '/home/galaxyoyo/IDEA Workspace/Gather Playing/client 2'
        }
    }
}
